什么是UUID？
	UUID是通用唯一识别码的缩写，其目的是让分布式系统中的所有元素，都能有唯一的辨识信息，而不需要通过中央控制端来做识别信息的指定。
		f823e849-616d-11e9-8866-a0a33bc4c34d
		   时间信息     时钟序列   唯一机器识别号

	UUID是个体主机生成的，所以不需要中央节点的参与。
**	UUID字符串一共由三个部分组成：时间信息、时钟序列、唯一机器识别号。优于时间戳和时钟序列是不断变化的，所		以每台主机生成的UUID字符串也是变化的。

**	MySQL中查看UUID ：  select UUID();

为什么有人想要使用UUID？
	在数据库集群中，为了避免每个MySQL各自生成的主键产生重复(主键全局不唯一)，所以有人考虑采用UUID方式。

*	UUID主键的好处？
		1.使用UUID，分布式生成主键，降低了全局节点的压力，使得主键生成速度更快
		2.使用UUID生成的主键值全局唯一
		3.跨服务器合并数据很方便

*	UUID主键的缺点？
		1.UUID占用16个字节，比4字节的INT类型和8字节的BIGINT类型更加占用存储空间
		2.UUID是字符串类型，查询速度慢
		3.UUID不是顺序增长，作为主键，数据写入IO随机性很大

*	主键自动增长的优点？
		1.INT和BIGINT类型占用存储空间较小
		2.MySQL检索数字类型速度远快过字符串
		3.主键值是自动增长的，所以IO写入连续性较好

	分布式环境下的主键自动增长
		使用UUID作为数据库主键的最主要原因就是分布式环境下容易出现重复的主键值。
		现在管理数据库集群的中间件已经可以生成全局主键，依靠全局的中央节点生成全局的连续数字作为主键值，这个数字是不会重复的。
**		中间件MyCat，其实就是一个SQL语句的路由器而已。虽然是单线程的，但是也不用担心性能的问题，如Redis、		NodeJS也都是单线程的，但是经过优化之后，性能也非常不错。

总结
	无论什么场合，都不推荐使用UUID作为数据表的主键。单节点时直接主键自动生成，集群时可以使用MyCat中间件