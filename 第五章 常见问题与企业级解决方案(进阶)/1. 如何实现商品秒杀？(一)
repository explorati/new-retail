如何实现商品秒杀？
	商品秒杀过程中经常出现的超售现象
		超售现象就是卖出了超过预期数量的商品

**	为什么数据库会出现超售现象？
		当一个事务在执行一半的时候出现了某种问题，未提交到数据库，库存还是1。
		另一个事务在执行时，发现数据库还有库存，直接执行完毕，库存为0。
		这样，就出现了问题

	怎么预防数据库超售现象？
*		1.(技术上最稳妥，但业务上不可行)：设置数据库事务的隔离级别为Serializable
			Serializable就是让数据库去串行的执行事务，一个事务执行完才会去执行下一个事务，这样确实解决了超售现象，但是时间不允许
***		2.在数据表上设置乐观锁字段，然后通过程序实现乐观锁
			在数据表中加入一个乐观锁字段，这个字段的数据类型是整数的，用它来记录数据更新的版本号。
			乐观锁其实是一种逻辑锁，他通过版本号来判断有没有更新的冲突出现。

**	程序实现乐观锁过程
		开始 -> 查询记录 -> 记下版本号 -> 比较版本号 -> 符合 -> 修改记录
												  -> 不符合 -> 结束

    什么表需要设置乐观锁？
*    	出现同时修改同一条记录的业务，相应的数据表需要设置乐观锁
    		库存表
    	不会出现同时修改同一记录的数据表，就不需要设置乐观锁
    		用户表 商品表 订单表 地址表

    利用Redis防止超售
**    	电商系统的普通商品销售为了防止超售，使用乐观锁就可以了。
**    	秒杀抢购的功能就可以使用Redis来实现了，这样可以应对更高的并发请求，而且还不会出现超售现象

	Redis介绍
		1.Redis是开源免费的NoSQL数据库产品，它使用内存缓存数据(以防万一，还可以修改设置，让Redis将数据保存在硬盘上)
		2.因为Redis使用内存来保存数据，I/O性能比MySQL要好很多
		  因为Redis没有表结构，数据结构是key-value的，数据结构变简单了，速度就更快了
***		  没有经过优化的Redis，读写性能2万/秒，MySQL性能5千/秒，写入3千/秒
		  优化后的Redis可以达到 10万/秒的请求
		  若组建Redis集群，性能还会进一步提升
		3.Redis是单线程的NoSQL数据库，但是采用的是非阻塞执行(FD机制，SELECT系统调用)

	Redis中的超售现象
		因为Redis的单线程是非阻塞执行的，所以并发修改数据容易产生超售的结果

**	Redis避免超售现象
		Redis引入了事务机制(批处理),一次性把多条命令(批处理执行)传递给Redis执行，这就避免了其他客户端中间插队，出现超售的现象。

