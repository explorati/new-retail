1.单节点和集群哪个读写更快？
	低并发情况下，单节点MySQL读写速度快
		由于在集群中多个MySQL节点的数据是要通过网络同步的
	高并发情况下，MySQL集群的读写速度快
		大量的读写请求会让单节点的MySQL硬盘无法承受，所以速度会变得很慢

2.组建数据库集群时的方案：
	读写分离方案：
		把写操作和读操作分发给不同的节点执行
		因为大部分系统都是读多写少的，如果读特别多的话，可以做成一个写节点多个读节点
		读写分离最重要的一点就是各个节点之间数据要同步
	数据切分方案：
		将数据切分存储到多个节点上面
		这样每一个节点的数据量相对都不会太多，只要InnoDB引擎单表的数据量不超过2000万，那么读写速度还是很快的使用数据切分时需要注意DB1和DB2之间不能有数据同步，是故意让两个节点不同步的，比如在执行写入操作时，数据会根据切分的规则会被保存到不同的节点上
		当查询时，是从多个节点上查询数据，最后返回给客户端

	两种方案怎么选择呢？
		实际上都需要使用

3.单节点数据库的弊病
	大型互联网程序用户群体庞大，所以架构必须要特殊设计
	单节点的数据库无法满足性能上的要求
	单节点的数据库没有冗余设计，无法满足高可用

4.常见MySQL集群方案
	常见的MySQL集群方案有PXC(同步传输)和Replication(异步传输)
	两种集群方案有各自的特点，PXC集群适合保存少量高价值数据，Replication集群适合保存大量数据
		两种集群都要使用

5.PXC方案与Replication方案的对比
	Replication
		异步传输：数据只要在一个节点中写入就算成功，至于能不能同步到其他节点，Replication集群并不能保证
		所以，当两个节点间的网络断开了，在DB1节点中写入数据，事务也成功提交了，在DB2节点上却读不到数据。
		所以，不能用Replication集群来保存重要数据，会引来不一致的结果

	PXC
		同步传输：在DB1节点中写入数据时，数据必须要同步到DB2节点上才算成功，事务才可以成功的提交
		所以，在DB2上可以100%的读取到数据才算成功
		使用PXC可以成功避免数据读写不一致的情况，但是比较起来PXC需要其他节点都要同步到数据才算写入成功，因此速度没有Replication快
	因此，(好评，留言)Replication适合低价值的数据 PXC集群适合保存少量高价值的数据(订单)
	两种集群方案是互补的关系

